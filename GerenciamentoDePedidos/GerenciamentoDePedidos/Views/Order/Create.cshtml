@model GerenciamentoDePedidos.Models.Order
@{
    ViewData["Title"] = "New Order";
    var customers = ViewBag.Customers as IEnumerable<GerenciamentoDePedidos.Models.Customer>;
    var products = ViewBag.Products as IEnumerable<GerenciamentoDePedidos.Models.Product>;
}
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
<script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
<div class="container mt-4">
    <h2>New Order</h2>
    <form asp-action="Create" method="post" id="orderForm">
        <div class="mb-3">
            <label class="form-label">Customer</label>
            <select asp-for="CustomerId" class="form-select" asp-items="@(new SelectList(ViewBag.Customers, "Id", "Name"))" required>
                <option value="">Select...</option>
            </select>
        </div>
        <h4>Products</h4>
        <div class="row mb-2">
            <div class="col-md-5">
                <select id="productSelect" class="form-select">
                    <option value="">Select product...</option>
                    @foreach (var p in products)
                    {
                        <option value="@p.Id" data-price="@p.Price" data-stock="@p.StockQuantity">@p.Name (@p.StockQuantity in stock)</option>
                    }
                </select>
            </div>
            <div class="col-md-3">
                <input type="number" id="productQty" class="form-control" placeholder="Quantity" min="1" />
            </div>
            <div class="col-md-2">
                <button type="button" id="addProduct" class="btn btn-primary">Add</button>
            </div>
        </div>
        <table class="table" id="itemsTable">
            <thead>
                <tr>
                    <th>Product</th>
                    <th>Unit Price</th>
                    <th>Quantity</th>
                    <th>Subtotal</th>
                    <th></th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
        <div class="mb-3">
            <label class="form-label">Total</label>
            <input type="text" id="totalAmount" class="form-control" readonly />
        </div>
        <input type="hidden" name="items" id="itemsJson" />
        <button type="submit" class="btn btn-success">Save Order</button>
        <a asp-action="Index" class="btn btn-secondary">Cancel</a>
    </form>
</div>
<script>
    var products = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(products));
    var items = [];

    function updateTable() {
        var tbody = $("#itemsTable tbody");
        tbody.empty();
        var total = 0;
        items.forEach(function (item, idx) {
            var subtotal = item.UnitPrice * item.Quantity;
            total += subtotal;
            var prod = products.find(p => p.Id === item.ProductId);
            tbody.append(`<tr>
                <td>${prod.Name}</td>
                <td>${item.UnitPrice.toFixed(2)}</td>
                <td>${item.Quantity}</td>
                <td>${subtotal.toFixed(2)}</td>
                <td><button type="button" class="btn btn-danger btn-sm" onclick="removeItem(${idx})">Remove</button></td>
            </tr>`);
        });
        $("#totalAmount").val(total.toFixed(2));
        $("#itemsJson").val(JSON.stringify(items));
    }
    function removeItem(idx) {
        items.splice(idx, 1);
        updateTable();
    }
    $("#addProduct").click(function () {
        var prodId = parseInt($("#productSelect").val());
        var qty = parseInt($("#productQty").val());
        var prod = products.find(p => p.Id === prodId);
        if (!prodId || !qty || qty < 1) return;
        if (qty > prod.StockQuantity) {
            alert("Insufficient stock!");
            return;
        }
        var existing = items.find(i => i.ProductId === prodId);
        if (existing) {
            if (existing.Quantity + qty > prod.StockQuantity) {
                alert("Insufficient stock!");
                return;
            }
            existing.Quantity += qty;
        } else {
            items.push({ ProductId: prodId, Quantity: qty, UnitPrice: prod.Price });
        }
        updateTable();
        $("#productSelect").val("");
        $("#productQty").val("");
    });
    $("#orderForm").submit(function () {
        if (items.length === 0) {
            alert("Add at least one product.");
            return false;
        }
        $("#itemsJson").val(JSON.stringify(items));
    });
</script>